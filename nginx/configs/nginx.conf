events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Logging
    access_log /var/log/nginx/access.log combined buffer=512k flush=1s;
    error_log /var/log/nginx/error.log debug;
    
    # Debugging headers
    add_header X-Debug-Host $host always;
    add_header X-Debug-URI $request_uri always;
    add_header X-Debug-Forwarded-For $proxy_add_x_forwarded_for always;

    upstream facebook {
        server 127.0.0.1:3000;
    }

    upstream instagram {
        server 127.0.0.1:3001;
    }

    upstream x {
        server 127.0.0.1:3002;
    }

    upstream default {
        server 127.0.0.1:3003;
    }

    # Captive Portal Detection handling
    # DNS probe handling
    map $http_user_agent $is_captive_portal {
        default                                     0;
        "~*CaptiveNetworkSupport"                  1;
        "~*Microsoft NCSI"                         1;
        "~*Microsoft-CryptoAPI"                    1;
        "~*Microsoft-WebDAV-MiniRedir"             1;
    }

    map $http_host $is_portal_domain {
        hostnames;
        default                              0;
        "detectportal.firefox.com"           1;
        "clients3.google.com"                1;
        "clients.google.com"                 1;
        "connectivitycheck.gstatic.com"      1;
        "connectivitycheck.android.com"      1;
        "captive.apple.com"                  1;
        "*.gstatic.com"                      1;
        "*.apple.com"                        1;
        "*.msftconnecttest.com"             1;
        "*.msftncsi.com"                    1;
    }

    map $request_uri $is_portal_uri {
        default                              0;
        "~/generate_204"                     1;
        "~/gen_204"                         1;
        "~/ncsi.txt"                        1;
        "~/hotspot-detect.html"             1;
        "~/success.txt"                     1;
    }

    map "$is_portal_domain:$is_portal_uri:$is_captive_portal" $portal_response {
        default                              0;
        "~^1:.*$"                           1;  # Match if domain is portal
        "~^.*:1:.*$"                        1;  # Match if URI is portal
        "~^.*:.*:1$"                        1;  # Match if User-Agent is portal
    }
    
    # Support SSL (even though we don't use it, prevents some client errors)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    server {
        listen 80;
        server_name facebook.com www.facebook.com;
        
        # Redirect HTTP to same host
        location / {
            proxy_pass http://facebook;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }

    server {
        listen 80;
        server_name instagram.com www.instagram.com;

        location / {
            proxy_pass http://instagram;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }

    server {
        listen 80;
        server_name x.com www.x.com twitter.com www.twitter.com;

        location / {
            proxy_pass http://x;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Prevent redirect loops
            proxy_redirect off;
        }
    }

    # Default server (catches all unmatched domains)
    server {
        listen 80 default_server;
        server_name _;

        # Handle captive portal detection
        location = /generate_204 {
            return 204;
        }
        
        location = /gen_204 {
            return 204;
        }
        
        location = /mobile/status.php {
            return 204;
        }

        location = /hotspot-detect.html {
            default_type text/html;
            return 200 '
<!DOCTYPE html>
<html>
<head>
    <title>Success</title>
</head>
<body>
    Success
</body>
</html>';
        }
        
        location = /library/test/success.html {
            default_type text/html;
            return 200 '
<!DOCTYPE html>
<html>
<head>
    <title>Success</title>
</head>
<body>
    Success
</body>
</html>';
        }

        location = /ncsi.txt {
            default_type text/plain;
            return 200 'Microsoft NCSI';
        }
        
        location = /redirect {
            return 302 http://captive.apple.com/hotspot-detect.html;
        }

        location = /chrome-variations/seed {
            default_type application/octet-stream;
            return 200;
        }
        
        # Special handling for various captive portal check paths
        location ~ ^/(kindle-wifi|mobile|check_network_status|success|connecttest|connectivity-check)$ {
            default_type text/html;
            return 200 'Success';
        }

        # Block WhatsApp and other messenger services
        location ~ ^/chat {
            return 404;
        }

        # Default location - proxy to default captive portal
        location / {
            # If it's a captive portal detection request
            if ($portal_response = 1) {
                return 200 '<HTML><HEAD><TITLE>Success</TITLE></HEAD><BODY>Success</BODY></HTML>';
            }

            proxy_pass http://default;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Prevent redirect loops
            proxy_redirect off;
        }
    }
}
